import unittest
import cubepy.factory as cp


class FactoryTests(unittest.TestCase):

    indexA = cp.index("IndexA", ['Item A '+str(xx) for xx in range(1,21)])
    indexB = cp.index("IndexB", ['Item B '+str(xx) for xx in range(1,31)])
    indexC = cp.index("IndexC", ['Item C '+str(xx) for xx in range(1,41)])

    cube1 = cp.cube([indexA, indexB],[[42,78,96,48,86,42,32,84, 4,26,61,55,85,72,48,96,97,82, 5,28,47,99,94,58,  11,87,97,20,30,52], [37,83,28, 2,75,56,72,24,72,21,71,93,83,43,44, 3,34,19,73,16,58, 9,46,33,  81,44,67,83,69,20], [61,41,55,31,78,43,43,86,71,44,64,79,98,31,78, 1,69,76,26,37,48,66,51,37,  57,50,66,35,43,88], [16,51,28,78,80, 9,57,11,19,69,29,52,29,45, 8,28,90,18,64,33,21,36,31,21,  97,90, 7,20,29,21], [18,73, 4,84,13,73,85,65,27,14,68, 8,21,49,19,64,37, 3,19,33,48, 6,24,57,  65,88,24,67,65,42], [49, 4,80, 6,71, 8,15,52,27,11,80,36, 4,33,77,49,77,89,16, 1,15,67,88,64,  23, 0,78,39,24,45], [62,53,49,50,56,19,44,70, 5,45,35,95,93,21,13,42,53,86,78,64,86,31,14,28,  33,23,81,44,56,58], [ 4,17,89, 6,36,87, 9,13,82, 2,21,69,16,40,96, 1,75, 2,19,41,34, 9,40,57,   4,17,34,37,97,74], [32,97, 2,20,61,38,25,90,19,60,68,54,85,78,46,36,21,64,17,98,82,85,40,81,  91,84,28,79,85,72], [60,25,56,26, 2,13,74,45,10,97,75,73,40,32,73,22,50,22, 4,19,66,78,64,14,  11, 2,99, 9,52,31], [83,42,36,45,28,88,74,82,34,49,93,59,88,59,25,91,29,93,68,34, 9,90,18,48,  57,16,58,67,81,48], [23,81, 6,85,96,98,92,28,18, 9,15,65,75,54,22,13,32,38,69,56,39,90,43,34,  93,45,74,80, 9,64], [94,28,63,77,96,33,75,23, 1, 9,61, 2,47,28,19,41,71, 5,93,68,79,39,51,51,  18,32,94,92,19,63], [28,28,10,75,30,49,10,64,17,51,28,26,41, 5,34,29,50,92,37, 8,29,89,49,76,   5,53,63,96,86,19], [74,67, 8,59,78,27,70,30,15,17,46,36,41,45, 3,25, 1,73,23,77,24, 4,28,89,  96,47,63,28, 8,89], [96,97,97,14,31,69,91,71,13,23,87,57,50,14, 7,34,17,63,51,88,46,82,27,43,  58,29,11,16, 5,22], [ 9, 3,68,93,18,71,53,10,54,40,88,14,54,67,15,71,28,45,74,63,21,50,63,78,  95,15,34,83,56,95], [56,53,30,37, 0,72,85,71,77, 3,30,34, 9,15,69,44,91, 5,43,13,72,41,45,21,  84,92,46, 0,60,15], [13,40,97,37,76,93,18,88,51,93, 8,83,97,78,22,42,73,51,16, 6,70,15, 3,49,  43, 4,60,88,28,65], [98,62,12,83,56,33,59,13,10,17,37, 7,84,10,87,28, 2,43, 8,80,69,60,43, 5,  40,54,33,71,13,74]])
    cube2 = cp.cube([indexB, indexC],[[60, 9, 0,28,60,24,58,64,76,84,59,26,79,82, 7,58,85,57,13,69,87,14,23,53,  10,24,16, 0,32, 4,89,75,10,96,20,91,40,71,17,60], [86,52,66,37,62,12,11,77,51,13,98,32,65,76,28,85,17, 4,18,74,44,58,36,17,  63,92,20,91,64,41, 5,67,66,84,16,17,37,68,92,85], [69,40,22,14,85,35,97,46,48,72, 3,80, 0,26,68,35,79,61,83,87,10,87,46,86,   2,18, 7,92,86,87,21,37,65,11,35,18,26,16,23,55], [ 2,86,88,38,87,70,12, 4,85,95,36,12,57,64,98,60,62,25,90,73,53,75,12,21,  54,34,43,59,67,58,90,71,50,84,64,83,33,52,49,68], [71,63,41,91,46,67,47,31,45,59,64,92,88, 4,31,15,29,59,94,45,31,52,57,26,  58,98,97,24,29, 2,87,48,61,74,76,92,57,73,22,10], [27,97,93, 6,98,24,63,72,36,31,38, 4,11,76,53,73,52, 6,54,46, 9,31,73,73,  13,95,64,43,10,73, 6,23,40,47,32,36,71, 2,19,50], [ 8,54,76,25,38,13,75,92,67,42,68,52,99,47,18,28,97,93,68, 4, 7, 5,47, 9,  65,33,65,89,67,85,97,91,85,14,42,71,25,90,24,38], [31,32,47,56,45,86,45,90,87,77,11,76,46, 4,74,73,77,39,81,84,58,28,23,51,  48,15,64,20,16,66,19, 0,93,65,37,77,74,97,52,85], [86,11,21,28,53,77,35, 5,42,11,19,77, 4,15,76,82,62, 9, 0,45,21,30,47,87,  38,75,58,51,99,27,31,47,49,26,69,39,19,12,77,16], [ 6, 7,99,45,12,36,91,23,42, 6,10,82,80,81,18,24,28,75,82,67,20,41,69,41,  88,83,72,40,21, 9, 6,27,21,79, 7, 9,44,36,94,54], [88,35,67,31,97,33,13,48,44,34, 7,37,46,98, 6,62,34,26, 5,68,72,17,59,84,  68, 2, 0,72, 3, 0,88,19,38,80, 2,50, 8,94,23,81], [55,30,83,96,60,12,56,60,35,79,26,34,56,63,49,60,87,63,90,42,95,71,48,89,  85,29,87,60,33, 5,24,38,43, 5,21,27,81,87, 8,83], [67,96,29,72,94,25,45,12,54,24,39, 7,37,65,52,98,56,14,33,88,88,73,43,53,  34,94, 5,18,65,51,31,69,38, 2,84,46,66,16,13, 0], [23,99,45,46,54,46,80,36,94,34,94,60,56,92, 2,15,75,29, 8,93,11,79,21, 6,  38,67, 4,13, 6,14,64,47,46,63,67,27,10,44,83, 8], [44, 2,62,31,88,39, 4, 7,45,75,14,15,60, 1,63,93,96,74,83,88,22,22,13,28,  76,72, 9,28,22, 4,36,43,34,36,74,10, 1,70,41,74], [30,75,69,75,83,54,76,90, 9,56, 9,46,25, 2,53,89,76,98,81,99,11,59,19,30,  99,48,23,30,28,56,74,58,95,71,35,40,56,81, 0,30], [41,93,67,11,67,66,32,42,85,43,85,21, 2,88,65,33,84,81,96,39,42,61,80,18,  56,45,60,11,49, 4, 9,33,57,37,43,84,29,42,88, 1], [22,58,72, 5,93,24,72,36,10,14,62,86,63,27,66,95,73,17,80,14, 9,67,42,98,  27,92,55,85,12,16,40,36,20,91,95,51,74,43, 1,37], [64,79, 3,95,25, 5,31,84,27,86,29,46,83,88,17,33,93,91,10,83, 4,14,73,73,   5,91,33,24, 0,97,28,70,66,29,46,40, 2,25,90,20], [70,71,85,37, 9,32,17,43,65,41,11,16,73,24,44,50,51,13,70,78,90,53,95,49,  39,86,78,44,19,87,99,29,44,38,31,12,18,42,50,66], [16,47,12,91,43,58,85,66,34, 0,16, 9,26,33,50,94,93,74,97,12,30,70,15, 1,  19, 9,98,55, 1,44,53,47,35,48,18,19,17,29,62, 1], [63,19,84,27, 0,26,99,82,81,27,73,44,27,95, 9,75,32,36,18, 6,14,74,98,32,  15,21, 9,46,62,32,21,37,80,71,34,40,53,25,33, 9], [58,23,92,59,43,69,80,41,26,74,16,47, 0,92, 4,11,91, 0,39, 5,11,42,34,60,  84,13,49,67,33,21,37,37, 8,45,79,15,37,15,37,84], [64,62,97,26,51,94,90,79,10,81,35,57,69,60, 7,69,13,42,95,47,93,61,54,60,  32,27,25,94,16,86,16,39,57, 6,79,50,54,63,21,19], [80,87,99, 8,69,90,50,93,84,91,56,80,10,70,85,37,17,23,46,76,97,54, 5,40,  88,87, 5,50,28,50,16,42,50,13, 1,96, 7,63,29,69], [ 7,68,89,12,42,98,68,83,86,23,31,69,84,69,21, 6,76,70, 6,53,44, 2,13,21,   8,40,35,66,34,17,83,18,25,95,49,33,33,25,97,49], [66,81,43,26,44,53,82,78,69,61,31,85,13,73,54,54,87,53,96,82,47,39,70,84,  75,67,32,13,62, 1,78,58,92,67,15,23,98,93,31,60], [84,53,72,54,12,44, 0,62,46,75,90,91,85,37,45,63,23,74,36,41,44,17,80,68,  76,57,40,14,64,13,92,75,70,76,60,65,91,86,23,99], [87,21,25,76,97,76,75,55,62,15,76,40,86,26, 5,21,92, 7,75,96,17,55,28,49,  51,16,40,48,71,74, 7,55,33,61, 2,48,76,33,21,46], [33, 6,32,32, 8,65,34,12,13,23,55,25,89, 5,22,83,40,55,48,46,18,21,31,23,  64,68,78,86,66,77,27,61,66,89,71,29,95,73,79,79]])


    def test_find(self):
        tmp = cp.cube([self.indexA],[False, False, False, False, False, False, False, False, False,  True, False, False, False, False,False, False, False, False, False,  True])
        res = cp.find("0", self.indexA, cp.end_with) == tmp
        self.assertTrue( res.any())

        subA = cp.index("SubA",['Item A '+str(xx) for xx in range(10,16)])
        tmp= cp.cube([self.indexA, subA],[[ True, True, True, True, True, True], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [ True,False,False,False,False,False], [False, True,False,False,False,False], [False,False, True,False,False,False], [False,False,False, True,False,False], [False,False,False,False, True,False], [False,False,False,False,False, True], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False], [False,False,False,False,False,False]])
        res = cp.find(self.indexA, subA, cp.end_with) == tmp
        self.assertTrue( res.any())

        



        


